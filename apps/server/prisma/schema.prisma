// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider = "prisma-nestjs-graphql"
  output   = "../src/@generated"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          String       @id
  profile     Profile?
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  playlist    Playlist[]
  accessToken AccessToken?

  @@map("user")
}

// For DB Inspect
model Profile {
  user                  User   @relation(fields: [userId], references: [id])
  userId                String @unique @map("user_id")
  username              String
  lastInteractGuildName String @map("last_interact_guild_name")
  avatarUrl             String @map("avatar_url")

  @@map("profile")
}

model AccessToken {
  token  String   @unique
  issued DateTime @default(now())
  expire DateTime
  user   User     @relation(fields: [userId], references: [id])
  userId String   @unique @map("user_id")

  @@map("access_token")
}

model Playlist {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  owner       User    @relation(fields: [ownerId], references: [id])
  ownerId     String  @map("owner_id")
  music       Music[]

  @@map("playlist")
}

model Music {
  videoId          String     @id @map("video_id")
  title            String
  shortDescription String     @map("short_description")
  lengthSeconds    String     @map("length_seconds")
  viewCount        String     @map("view_count")
  authorName       String     @map("author_name")
  authorChannelUrl String     @map("author_channel_url")
  thumbnailUrl     String     @map("thumbnail_url")
  likes            Int
  playlist         Playlist[]

  @@map("music")
}
